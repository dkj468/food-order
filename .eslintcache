[{"D:\\learning\\React\\Food Order\\src\\index.js":"1","D:\\learning\\React\\Food Order\\src\\App.js":"2","D:\\learning\\React\\Food Order\\src\\components\\Layout\\Header.js":"3","D:\\learning\\React\\Food Order\\src\\components\\Layout\\HeaderCartButton.js":"4","D:\\learning\\React\\Food Order\\src\\components\\Cart\\CartIcon.js":"5","D:\\learning\\React\\Food Order\\src\\components\\Meals\\Meals.js":"6","D:\\learning\\React\\Food Order\\src\\components\\Meals\\AvailableMeals.js":"7","D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealsSummary.js":"8","D:\\learning\\React\\Food Order\\src\\components\\UI\\Card.js":"9","D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealItem\\MealItem.js":"10","D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealItem\\MealItemForm.js":"11","D:\\learning\\React\\Food Order\\src\\components\\UI\\Input.js":"12","D:\\learning\\React\\Food Order\\src\\components\\UI\\Modal.js":"13","D:\\learning\\React\\Food Order\\src\\components\\Cart\\Cart.js":"14","D:\\learning\\React\\Food Order\\src\\store\\CartContext.js":"15","D:\\learning\\React\\Food Order\\src\\store\\CartProvider.js":"16","D:\\learning\\React\\Food Order\\src\\components\\Cart\\CartItem.js":"17","D:\\learning\\React\\Food Order\\src\\components\\Cart\\Checkout.js":"18","D:\\learning\\React\\Food Order\\src\\hooks\\use-input.js":"19","D:\\learning\\React\\Food Order\\src\\hooks\\use-http.js":"20"},{"size":142,"mtime":1644141948816,"results":"21","hashOfConfig":"22"},{"size":659,"mtime":1645632798666,"results":"23","hashOfConfig":"22"},{"size":617,"mtime":1644578382824,"results":"24","hashOfConfig":"22"},{"size":1219,"mtime":1644652437992,"results":"25","hashOfConfig":"22"},{"size":523,"mtime":1644162575672,"results":"26","hashOfConfig":"22"},{"size":303,"mtime":1644166026968,"results":"27","hashOfConfig":"22"},{"size":2260,"mtime":1645634232678,"results":"28","hashOfConfig":"22"},{"size":585,"mtime":1644165608523,"results":"29","hashOfConfig":"22"},{"size":206,"mtime":1644166403138,"results":"30","hashOfConfig":"22"},{"size":941,"mtime":1644599700572,"results":"31","hashOfConfig":"22"},{"size":880,"mtime":1645632736790,"results":"32","hashOfConfig":"22"},{"size":396,"mtime":1644643767632,"results":"33","hashOfConfig":"22"},{"size":718,"mtime":1691974427924,"results":"34","hashOfConfig":"22"},{"size":2625,"mtime":1645635160254,"results":"35","hashOfConfig":"22"},{"size":226,"mtime":1644582399636,"results":"36","hashOfConfig":"22"},{"size":2447,"mtime":1644651231816,"results":"37","hashOfConfig":"22"},{"size":664,"mtime":1644649542575,"results":"38","hashOfConfig":"22"},{"size":3149,"mtime":1645632779674,"results":"39","hashOfConfig":"22"},{"size":818,"mtime":1645548700649,"results":"40","hashOfConfig":"22"},{"size":1070,"mtime":1645634793259,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"4hhabf",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\learning\\React\\Food Order\\src\\index.js",[],["86","87"],"D:\\learning\\React\\Food Order\\src\\App.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Layout\\Header.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Layout\\HeaderCartButton.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Cart\\CartIcon.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Meals\\Meals.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Meals\\AvailableMeals.js",["88","89","90"],"import { useCallback, useEffect, useState } from 'react';\r\nimport useHttp from '../../hooks/use-http';\r\nimport classes from '../Meals/AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\nconst DUMMY_MEALS = [\r\n    {\r\n      id: 'm1',\r\n      name: 'Sushi',\r\n      description: 'Finest fish and veggies',\r\n      price: 22.99,\r\n    },\r\n    {\r\n      id: 'm2',\r\n      name: 'Schnitzel',\r\n      description: 'A german specialty!',\r\n      price: 16.5,\r\n    },\r\n    {\r\n      id: 'm3',\r\n      name: 'Barbecue Burger',\r\n      description: 'American, raw, meaty',\r\n      price: 12.99,\r\n    },\r\n    {\r\n      id: 'm4',\r\n      name: 'Green Bowl',\r\n      description: 'Healthy...and green...',\r\n      price: 18.99,\r\n    },\r\n  ];\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [mealData, setMealData] = useState([]);\r\n  const {isLoading, error, sendRequest: fetchData} = useHttp();\r\n\r\n\r\n    useEffect(() => {\r\n      const processData = (data) => {\r\n        const mealData = [];\r\n        for(const mealKey in data){\r\n          mealData.push(\r\n            {\r\n              id: mealKey, \r\n              name: data[mealKey].name, \r\n              description: data[mealKey].description, \r\n              price: data[mealKey].price\r\n            })\r\n        }\r\n        setMealData(mealData);\r\n      }\r\n      fetchData({url:'https://food-order-0617-default-rtdb.firebaseio.com/meals.json'}, processData);\r\n    }, [fetchData])\r\n\r\n    let content;\r\n    if(isLoading){\r\n      content = <p>Loading data</p>\r\n    }\r\n    if(error){\r\n      content = <p>Something went wrong, please try again</p>\r\n    }\r\n\r\n    const meals = mealData.map(meal => \r\n        <MealItem \r\n            id= {meal.id} \r\n            key= {meal.id} \r\n            name={meal.name} \r\n            description={meal.description} \r\n            price={meal.price}\r\n        />)\r\n    return(\r\n        <section className={classes.meals}>\r\n            {isLoading && <Card><p>Loading...</p></Card>}\r\n            {error && <Card><p>Something went wrong, please try again</p></Card>}\r\n            {!isLoading && !error && \r\n              <Card>\r\n                  <ul>{meals}</ul>\r\n              </Card>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AvailableMeals;","D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealsSummary.js",[],"D:\\learning\\React\\Food Order\\src\\components\\UI\\Card.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealItem\\MealItem.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Meals\\MealItem\\MealItemForm.js",[],"D:\\learning\\React\\Food Order\\src\\components\\UI\\Input.js",[],"D:\\learning\\React\\Food Order\\src\\components\\UI\\Modal.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Cart\\Cart.js",["91","92"],"import { useContext, useState } from 'react';\r\nimport useHttp from '../../hooks/use-http';\r\nimport CartContext from '../../store/CartContext';\r\nimport classes from '../Cart/Cart.module.css';\r\n\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = props => {\r\n    const [isOrder, setIsOrder] = useState(false);\r\n    const {isLoading, error, sendRequest: addOrder} = useHttp();\r\n    const ctx = useContext(CartContext);\r\n    const totalAmount = `$${ctx.totalAmount.toFixed(2)}`;\r\n    const hasItems = ctx.items.length > 0;\r\n\r\n    const addItemHandler = (item) => {\r\n        ctx.addItem({...item, quantity:1});\r\n    }\r\n\r\n    const removeItemHandler = (id) => {\r\n        ctx.removeItem(id);\r\n    }\r\n\r\n    const orderClickHandler = () => {\r\n        setIsOrder(true);\r\n    }\r\n\r\n    const submitOrderHandler = async (userData) => {\r\n            addOrder({url: 'https://food-order-0617-default-rtdb.firebaseio.com/orders.json',\r\n                      method:'POST',\r\n                      body: {\r\n                        userData,\r\n                        items: ctx.items\r\n                        }                     \r\n                    }, null);\r\n            props.onCartClose();\r\n            \r\n            // const data = await response.json();\r\n            // console.log(data);\r\n    }\r\n    const cartItems = ctx.items.map(item => {\r\n        return <CartItem \r\n            key={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            quantity={item.quantity} \r\n            onAdd={addItemHandler.bind(null, item)}\r\n            onRemove={removeItemHandler.bind(null, item.id)}/>\r\n\r\n    });\r\n\r\n    // console.log(props);\r\n    return (\r\n        <Modal onClick={props.onCartClose}>\r\n            <ul className={classes['cart-items']}>{cartItems}</ul>\r\n            {hasItems ? \r\n            <div className={classes.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            : <div className={classes.total}><span>Your cart is empty</span></div>\r\n            }\r\n            {\r\n                !isOrder &&\r\n                <div className={classes.actions}>\r\n                    <button className={classes['button--alt']} onClick={props.onCartClose}>Close</button>\r\n                    { hasItems && <button className={classes.button} onClick={orderClickHandler}>Order</button>}\r\n                </div>\r\n            }\r\n            {isOrder && <Checkout onCancel={props.onCartClose} onConfirm={submitOrderHandler} />}\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default Cart;","D:\\learning\\React\\Food Order\\src\\store\\CartContext.js",[],"D:\\learning\\React\\Food Order\\src\\store\\CartProvider.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Cart\\CartItem.js",[],"D:\\learning\\React\\Food Order\\src\\components\\Cart\\Checkout.js",["93","94","95","96"],"import useInput from '../../hooks/use-input';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst Checkout = (props) => {\r\n\r\n  const nameValidator = (name) => {\r\n      return (name.trim() !== '');\r\n  }\r\n\r\n  const streetValidator = (street) => {\r\n    return (street.trim() !== '');\r\n  }\r\n\r\n  const postCodeValidator = (postCode) => {\r\n      return (postCode.trim().length === 6);\r\n  }\r\n\r\n  const cityValidator = (country) => {\r\n    return (country.trim() !== '');\r\n  }\r\n\r\n  // name\r\n  const {\r\n      value: name, \r\n      IsValid: nameIsValid, \r\n      changeHandler: nameChangeHandler, \r\n      blurHandler: nameBlurHandler,\r\n      inputClass: nameInputClass\r\n    } = useInput(nameValidator, classes);\r\n\r\n  // street\r\n  const {\r\n    value: street, \r\n    IsValid: streetIsValid, \r\n    changeHandler: streetChangeHandler, \r\n    blurHandler: streetBlurHandler,\r\n    inputClass: streetInputClass\r\n  } = useInput(streetValidator, classes); \r\n\r\n  // postal code\r\n  const {\r\n    value: postCode, \r\n    IsValid: postCodeIsValid, \r\n    changeHandler: postCodeChangeHandler, \r\n    blurHandler: postCodeBlurHandler,\r\n    inputClass: postCodeInputClass\r\n  } = useInput(postCodeValidator, classes); \r\n\r\n// city\r\n    const {\r\n        value: city, \r\n        IsValid: cityIsValid, \r\n        changeHandler: cityChangeHandler, \r\n        blurHandler: cityBlurHandler,\r\n        inputClass: cityInputClass\r\n        } = useInput(cityValidator, classes);\r\n\r\n    //let formIsValid = nameIsValid && streetIsValid && postCodeIsValid && cityIsValid;\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const userData = {\r\n        name,\r\n        street,\r\n        postCode,\r\n        city\r\n    }\r\n\r\n    props.onConfirm(userData);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameInputClass}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' \r\n            onChange={nameChangeHandler} \r\n            onBlur={nameBlurHandler}\r\n            value={name}\r\n            />\r\n      </div>\r\n      <div className={streetInputClass}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' \r\n            onChange={streetChangeHandler}\r\n            onBlur={streetBlurHandler}\r\n            value={street}\r\n            />\r\n      </div>\r\n      <div className={postCodeInputClass}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' \r\n            onChange={postCodeChangeHandler}\r\n            onBlur={postCodeBlurHandler}\r\n            value={postCode}\r\n            />\r\n      </div>\r\n      <div className={cityInputClass}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' \r\n            onChange={cityChangeHandler}\r\n            onBlur={cityBlurHandler}\r\n            value={city}\r\n            />\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;","D:\\learning\\React\\Food Order\\src\\hooks\\use-input.js",[],"D:\\learning\\React\\Food Order\\src\\hooks\\use-http.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":21},{"ruleId":"101","severity":1,"message":"105","line":6,"column":7,"nodeType":"103","messageId":"104","endLine":6,"endColumn":18},{"ruleId":"101","severity":1,"message":"106","line":61,"column":7,"nodeType":"103","messageId":"104","endLine":61,"endColumn":14},{"ruleId":"101","severity":1,"message":"107","line":12,"column":12,"nodeType":"103","messageId":"104","endLine":12,"endColumn":21},{"ruleId":"101","severity":1,"message":"108","line":12,"column":23,"nodeType":"103","messageId":"104","endLine":12,"endColumn":28},{"ruleId":"101","severity":1,"message":"109","line":25,"column":16,"nodeType":"103","messageId":"104","endLine":25,"endColumn":27},{"ruleId":"101","severity":1,"message":"110","line":34,"column":14,"nodeType":"103","messageId":"104","endLine":34,"endColumn":27},{"ruleId":"101","severity":1,"message":"111","line":43,"column":14,"nodeType":"103","messageId":"104","endLine":43,"endColumn":29},{"ruleId":"101","severity":1,"message":"112","line":52,"column":18,"nodeType":"103","messageId":"104","endLine":52,"endColumn":29},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'DUMMY_MEALS' is assigned a value but never used.","'content' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'nameIsValid' is assigned a value but never used.","'streetIsValid' is assigned a value but never used.","'postCodeIsValid' is assigned a value but never used.","'cityIsValid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]